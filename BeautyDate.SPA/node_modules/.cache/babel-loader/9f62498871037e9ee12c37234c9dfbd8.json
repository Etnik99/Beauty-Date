{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Etnik Krivaqa\\\\Desktop\\\\BeautyDate\\\\BeautyDate.SPA\\\\src\\\\components\\\\LoginRegister.js\";\nimport React from \"react\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoginOpen: true,\n      isRegisterOpen: false\n    };\n  }\n\n  showLoginBox() {\n    this.setState({\n      isLoginOpen: true,\n      isRegisterOpen: false\n    });\n  }\n\n  showRegisterBox() {\n    this.setState({\n      isRegisterOpen: true,\n      isLoginOpen: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"root-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-controller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controller \" + (this.state.isLoginOpen ? \"selected-controller\" : \"\"),\n      onClick: this.showLoginBox.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controller \" + (this.state.isRegisterOpen ? \"selected-controller\" : \"\"),\n      onClick: this.showRegisterBox.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, \"Register\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, this.state.isLoginOpen && /*#__PURE__*/React.createElement(LoginBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 48\n      }\n    }), this.state.isRegisterOpen && /*#__PURE__*/React.createElement(RegisterBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 51\n      }\n    })));\n  }\n\n}\n\nclass LoginBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  } // submitLogin(e) {\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"username\",\n      name: \"username\",\n      className: \"login-input\",\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      className: \"login-input\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"login-btn\",\n      onClick: this.submitLogin.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Login\")));\n  }\n\n}\n\nclass RegisterBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      active: \"1\",\n      role: \"1\",\n      errors: []\n    };\n  }\n\n  showValidationErr(elm, msg) {\n    this.setState(prevState => ({\n      errors: [...prevState.errors, {\n        elm,\n        msg\n      }]\n    }));\n  }\n\n  clearValidationErr(elm) {\n    this.setState(prevState => {\n      let newArr = [];\n\n      for (let err of prevState.errors) {\n        if (elm != err.elm) {\n          newArr.push(err);\n        }\n      }\n\n      return newArr;\n    });\n  }\n\n  onFirstnameChange(e) {\n    this.setState({\n      firstname: e.target.value\n    });\n  }\n\n  onLastnameChange(e) {\n    this.setState({\n      lastname: e.target.value\n    });\n  }\n\n  onUsernameChange(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onPasswordChange(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onEmailChange(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onActiveChange(e) {\n    this.setState({\n      active: e.target.value\n    });\n  }\n\n  onRoleChange(e) {\n    this.setState({\n      role: e.target.value\n    });\n  }\n\n  submitRegister(e) {\n    if (this.state.firstname == \"\") {\n      return this.showValidationErr(\"username\", \"Username cannot be empty\");\n    } else if (this.state.lastname == \"\") {\n      return this.showValidationErr(\"lastname\", \"Lastname cannot be empty\");\n    } else if (this.state.username == \"\") {\n      return this.showValidationErr(\"username\", \"Username cannot be empty\");\n    } else if (this.state.password == \"\") {\n      return this.showValidationErr(\"password\", \"Password cannot be empty\");\n    } else if (this.sate.active == \"\") {\n      return this.showValidationErr(\"email\", \"Email cannot be empty\");\n    } else if (this.state.role == \"\") {\n      return this.showValidationErr(\"active\", \"Active cannot be empty\");\n    } else if (this.state.role == \"\") {\n      return this.showValidationErr(\"role\", \"Role cannot be empty\");\n    }\n  }\n\n  render() {\n    let firstnameErr = null,\n        lastnameErr = null,\n        usernamenameErr = null,\n        passwordErr = null,\n        emailErr = null,\n        activeErr = null,\n        roleErr = null;\n\n    for (let err of this.state.errors) {\n      if (err.eln == \"firstname\") {\n        firstnameErr = err.msg;\n      }\n\n      if (err.eln == \"lastname\") {\n        lastnameErr = err.msg;\n      }\n\n      if (err.eln == \"username\") {\n        usernameErr = err.msg;\n      }\n\n      if (err.eln == \"passwordname\") {\n        passwordErr = err.msg;\n      }\n\n      if (err.eln == \"email\") {\n        emailErr = err.msg;\n      }\n\n      if (err.eln == \"active\") {\n        activeErr = err.msg;\n      }\n\n      if (err.eln == \"role\") {\n        roleErr = err.msg;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"firstname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, \"Firstname\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"firstname\",\n      name: \"firstname\",\n      className: \"login-input\",\n      placeholder: \"Firstname\",\n      onChange: this.onFirstnameChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"danger-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, firstnameErr ? firstnameErr : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Lastname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }, \"Lastname\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"Lastname\",\n      name: \"lastname\",\n      className: \"login-input\",\n      placeholder: \"Lastname\",\n      onChange: this.onLastnameChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"danger-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, lastnameErr ? lastnameErr : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"username\",\n      name: \"username\",\n      className: \"login-input\",\n      placeholder: \"Username\",\n      onChange: this.onUsernameChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"danger-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, usernameErr ? usernameErr : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      className: \"login-input\",\n      placeholder: \"Password\",\n      onChange: this.onPasswordChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"danger-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, passwordErr ? passwordErr : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      className: \"login-input\",\n      placeholder: \"Email\",\n      onChange: this.onEmailChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"danger-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }, emailErr ? emailErr : \"\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"login-btn\",\n      onClick: this.submitRegister.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, \"Register\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Etnik Krivaqa/Desktop/BeautyDate/BeautyDate.SPA/src/components/LoginRegister.js"],"names":["React","App","Component","constructor","props","state","isLoginOpen","isRegisterOpen","showLoginBox","setState","showRegisterBox","render","bind","LoginBox","submitLogin","RegisterBox","firstname","lastname","username","password","email","active","role","errors","showValidationErr","elm","msg","prevState","clearValidationErr","newArr","err","push","onFirstnameChange","e","target","value","onLastnameChange","onUsernameChange","onPasswordChange","onEmailChange","onActiveChange","onRoleChange","submitRegister","sate","firstnameErr","lastnameErr","usernamenameErr","passwordErr","emailErr","activeErr","roleErr","eln","usernameErr"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isLoginOpen: true, isRegisterOpen: false }\r\n    }\r\n\r\n    showLoginBox() {\r\n        this.setState({ isLoginOpen: true, isRegisterOpen: false })\r\n    }\r\n\r\n    showRegisterBox() {\r\n        this.setState({ isRegisterOpen: true, isLoginOpen: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"root-container\" >\r\n\r\n                <div className=\"box-controller\">\r\n                    <div className={\"controller \" + (this.state.isLoginOpen ? \"selected-controller\" : \"\")} onClick={this.showLoginBox.bind(this)}>\r\n                        Login\r\n                </div>\r\n\r\n                    <div className={\"controller \" + (this.state.isRegisterOpen ? \"selected-controller\" : \"\")} onClick={this.showRegisterBox.bind(this)}>\r\n                        Register\r\n                </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"box-container\" >\r\n\r\n                    {this.state.isLoginOpen && <LoginBox />}\r\n                    {this.state.isRegisterOpen && <RegisterBox />}\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass LoginBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    // submitLogin(e) {\r\n\r\n    // }\r\n    render() {\r\n        return (\r\n            <div className=\"inner-container\" >\r\n\r\n                <div className=\"heder\">\r\n                    Login\r\n                </div>\r\n\r\n                <div className=\"box\">\r\n\r\n                    <div className=\"input-group\" >\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input type=\"username\" name=\"username\" className=\"login-input\" placeholder=\"Username\"></input>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"input-group\" >\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" name=\"password\" className=\"login-input\" placeholder=\"Password\"></input>\r\n                    </div>\r\n\r\n                    <button type=\"button\" className=\"login-btn\" onClick={this.submitLogin.bind(this)}>Login</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass RegisterBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n            active: \"1\",\r\n            role: \"1\",\r\n            errors: []\r\n        }\r\n    }\r\n    showValidationErr(elm, msg) {\r\n        this.setState((prevState) => ({ errors: [...prevState.errors, { elm, msg }] }))\r\n    }\r\n\r\n    clearValidationErr(elm) {\r\n        this.setState((prevState) => {\r\n            let newArr = [];\r\n            for (let err of prevState.errors) {\r\n                if (elm != err.elm) {\r\n                    newArr.push(err);\r\n                }\r\n            }\r\n            return newArr;\r\n        });\r\n    }\r\n\r\n\r\n    onFirstnameChange(e) {\r\n        this.setState({ firstname: e.target.value })\r\n    }\r\n    onLastnameChange(e) {\r\n        this.setState({ lastname: e.target.value })\r\n    }\r\n    onUsernameChange(e) {\r\n        this.setState({ username: e.target.value })\r\n    }\r\n    onPasswordChange(e) {\r\n        this.setState({ password: e.target.value })\r\n    }\r\n    onEmailChange(e) {\r\n        this.setState({ email: e.target.value })\r\n    }\r\n    onActiveChange(e) {\r\n        this.setState({ active: e.target.value })\r\n    }\r\n    onRoleChange(e) {\r\n        this.setState({ role: e.target.value })\r\n    }\r\n\r\n\r\n    submitRegister(e) {\r\n\r\n        if (this.state.firstname == \"\") {\r\n            return this.showValidationErr(\"username\", \"Username cannot be empty\");\r\n        } else if (this.state.lastname == \"\") {\r\n            return this.showValidationErr(\"lastname\", \"Lastname cannot be empty\");\r\n        } else if (this.state.username == \"\") {\r\n            return this.showValidationErr(\"username\", \"Username cannot be empty\");\r\n        } else if (this.state.password == \"\") {\r\n            return this.showValidationErr(\"password\", \"Password cannot be empty\");\r\n        } else if (this.sate.active == \"\") {\r\n            return this.showValidationErr(\"email\", \"Email cannot be empty\");\r\n        } else if (this.state.role == \"\") {\r\n            return this.showValidationErr(\"active\", \"Active cannot be empty\");\r\n        } else if (this.state.role == \"\") {\r\n            return this.showValidationErr(\"role\", \"Role cannot be empty\");\r\n        }\r\n    }\r\n    render() {\r\n\r\n        let firstnameErr = null, lastnameErr = null, usernamenameErr = null, passwordErr = null, emailErr = null, activeErr = null, roleErr = null;\r\n        for (let err of this.state.errors) {\r\n\r\n            if (err.eln == \"firstname\") {\r\n                firstnameErr = err.msg;\r\n            } if (err.eln == \"lastname\") {\r\n                lastnameErr = err.msg;\r\n            } if (err.eln == \"username\") {\r\n                usernameErr = err.msg;\r\n            } if (err.eln == \"passwordname\") {\r\n                passwordErr = err.msg;\r\n            } if (err.eln == \"email\") {\r\n                emailErr = err.msg;\r\n            } if (err.eln == \"active\") {\r\n                activeErr = err.msg;\r\n            } if (err.eln == \"role\") {\r\n                roleErr = err.msg;\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"inner-container\" >\r\n\r\n                <div className=\"heder\">\r\n                    Register\r\n            </div>\r\n\r\n                <div className=\"box\">\r\n\r\n                    <div className=\"input-group\" >\r\n                        <label htmlFor=\"firstname\">Firstname</label>\r\n                        <input type=\"firstname\" name=\"firstname\" className=\"login-input\" placeholder=\"Firstname\" onChange={this.onFirstnameChange.bind(this)}></input>\r\n                        <small className=\"danger-error\">{firstnameErr ? firstnameErr : \"\"}</small>\r\n                    </div>\r\n\r\n                    <div className=\"input-group\" >\r\n                        <label htmlFor=\"Lastname\">Lastname</label>\r\n                        <input type=\"Lastname\" name=\"lastname\" className=\"login-input\" placeholder=\"Lastname\" onChange={this.onLastnameChange.bind(this)}></input>\r\n                        <small className=\"danger-error\">{lastnameErr ? lastnameErr : \"\"}</small>\r\n                    </div>\r\n\r\n                    <div className=\"input-group\" >\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input type=\"username\" name=\"username\" className=\"login-input\" placeholder=\"Username\" onChange={this.onUsernameChange.bind(this)}></input>\r\n                        <small className=\"danger-error\">{usernameErr ? usernameErr : \"\"}</small>\r\n                    </div>\r\n\r\n                    <div className=\"input-group\" >\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" name=\"password\" className=\"login-input\" placeholder=\"Password\" onChange={this.onPasswordChange.bind(this)}></input>\r\n                        <small className=\"danger-error\">{passwordErr ? passwordErr : \"\"}</small>\r\n                    </div>\r\n\r\n                    <div className=\"input-group\" >\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" name=\"email\" className=\"login-input\" placeholder=\"Email\" onChange={this.onEmailChange.bind(this)}></input>\r\n                        <small className=\"danger-error\">{emailErr ? emailErr : \"\"}</small>\r\n                    </div>\r\n\r\n\r\n\r\n                    <button type=\"button\" className=\"login-btn\" onClick={this.submitRegister.bind(this)}>Register</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}